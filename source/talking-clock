#!/bin/bash

# Original script Copyright (C) 2014  Jan <pikkewyn>
# Fork by Jamie Larsson <jclarsson> 2025
#
# Depends on Speech Dispatcher
# sudo pacman -S speech-dispatcher
# sudo apt install speech-dispatcher
#
#
#This program is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 3 of the License, or
#any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software Foundation,
#Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA

readonly debug=false
readonly program="talking-clock"

freq=15

print_help()
{
    cat <<-EOF
talking-clock:
-f [n]
    n: 5, 15, 30, 60 ( frequency in minutes )
    If no flag specified clock will play at 15 minutes.
-s
    stops clock
EOF

    exit 1
}

stop_clock()
{
    name="${0##*/}"
    pid=$(pidof -x -o "$$" $name )

    if [ -n "$pid" ]
    then
        kill $pid
        echo "stopping $name"
    fi
}

clock()
{
    while :
    do
        delay=$((60 -  $(date +%s) % 60));
        sleep $delay

        timestamp=($(date "+%l %M %S"))
        hour=${timestamp[0]#0}
        minute=${timestamp[1]#0}

        if [[ $debug == true ]]; then
            echo "$hour:$minute:${timestamp[2]}" >&2
        fi

        if [[ $minute -eq 0 ]];then
            spd-say "It's $(date +'%l') o'clock"
        elif [[ $minute -eq 5 && $freq -eq 5 ]]; then
            spd-say "It's $(date +'%l') o five"
        elif [[ (
                    $freq -eq 5 &&
                    ($minute -eq 10 ||
                     $minute -eq 15 ||
                     $minute -eq 20 ||
                     $minute -eq 25 ||
                     $minute -eq 30 ||
                     $minute -eq 35 ||
                     $minute -eq 40 ||
                     $minute -eq 45 ||
                     $minute -eq 50 ||
                     $minute -eq 55)
                ) || (
                    $freq -eq 15 &&
                    ($minute -eq 15 ||
                     $minute -eq 30 ||
                     $minute -eq 45)
                ) || ($freq -eq 30 && $minute -eq 30)
        ]]; then
            spd-say "It's $(date +'%l:%M')"
        fi
    done
}


if [ "$(which spd-say &> /dev/null)" ];then
    echo "Speech Dispatcher is necessary to say time"
    exit 1
fi

[[ "$1" == "-h" ]] && print_help

[[ "$1" == "-s" ]] && stop_clock && exit 0

if [[ "$1" == "-f" && $# -eq 2 ]];
then
    [[ $2 != 60 && $2 != 5 && $2 != 15 && $2 != 30 ]] && print_help
    freq=$2
else
    [[ $1 != "" ]] && print_help
fi


stop_clock
echo "starting $program"

clock &
